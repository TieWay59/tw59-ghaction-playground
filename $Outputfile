%%
% Copyright (c) 2017 - 2021, Pascal Wagler;
% Copyright (c) 2014 - 2021, John MacFarlane
%
% All rights reserved.
%
% Redistribution and use in source and binary forms, with or without
% modification, are permitted provided that the following conditions
% are met:
%
% - Redistributions of source code must retain the above copyright
% notice, this list of conditions and the following disclaimer.
%
% - Redistributions in binary form must reproduce the above copyright
% notice, this list of conditions and the following disclaimer in the
% documentation and/or other materials provided with the distribution.
%
% - Neither the name of John MacFarlane nor the names of other
% contributors may be used to endorse or promote products derived
% from this software without specific prior written permission.
%
% THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
% "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
% LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
% FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
% COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
% INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
% BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
% LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
% CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
% LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
% ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
% POSSIBILITY OF SUCH DAMAGE.
%%

%%
% This is the Eisvogel pandoc LaTeX template.
%
% For usage information and examples visit the official GitHub page:
% https://github.com/Wandmalfarbe/pandoc-latex-template
%%

% Options for packages loaded elsewhere
\PassOptionsToPackage{unicode}{hyperref}
\PassOptionsToPackage{hyphens}{url}
\PassOptionsToPackage{dvipsnames,svgnames*,x11names*,table}{xcolor}
\PassOptionsToPackage{space}{xeCJK}
%
\documentclass[
  paper=a4,
  ,captions=tableheading
]{scrbook}
\usepackage{amsmath,amssymb}
\usepackage{lmodern}
\usepackage{setspace}
\setstretch{1.2}
\usepackage{ifxetex,ifluatex}
\ifnum 0\ifxetex 1\fi\ifluatex 1\fi=0 % if pdftex
  \usepackage[T1]{fontenc}
  \usepackage[utf8]{inputenc}
  \usepackage{textcomp} % provide euro and other symbols
\else % if luatex or xetex
  \usepackage{unicode-math}
  \defaultfontfeatures{Scale=MatchLowercase}
  \defaultfontfeatures[\rmfamily]{Ligatures=TeX,Scale=1}
  \ifxetex
    \usepackage{xeCJK}
    \setCJKmainfont[]{Noto Serif CJK SC}
  \fi
  \ifluatex
    \usepackage[]{luatexja-fontspec}
    \setmainjfont[]{Noto Serif CJK SC}
  \fi
\fi
% Use upquote if available, for straight quotes in verbatim environments
\IfFileExists{upquote.sty}{\usepackage{upquote}}{}
\IfFileExists{microtype.sty}{% use microtype if available
  \usepackage[]{microtype}
  \UseMicrotypeSet[protrusion]{basicmath} % disable protrusion for tt fonts
}{}
\makeatletter
\@ifundefined{KOMAClassName}{% if non-KOMA class
  \IfFileExists{parskip.sty}{%
    \usepackage{parskip}
  }{% else
    \setlength{\parindent}{0pt}
    \setlength{\parskip}{6pt plus 2pt minus 1pt}}
}{% if KOMA class
  \KOMAoptions{parskip=half}}
\makeatother
\usepackage{xcolor}
\definecolor{default-linkcolor}{HTML}{A50000}
\definecolor{default-filecolor}{HTML}{A50000}
\definecolor{default-citecolor}{HTML}{4077C0}
\definecolor{default-urlcolor}{HTML}{4077C0}
\IfFileExists{xurl.sty}{\usepackage{xurl}}{} % add URL line breaks if available
\IfFileExists{bookmark.sty}{\usepackage{bookmark}}{\usepackage{hyperref}}
\hypersetup{
  pdfauthor={Tieway59},
  pdfkeywords={github.com/TieWay59/tw59-ghaction-playground},
  hidelinks,
  breaklinks=true,
  pdfcreator={LaTeX via pandoc with the Eisvogel template}}
\urlstyle{same} % disable monospaced font for URLs
\usepackage[margin=2.5cm,includehead=true,includefoot=true,centering,]{geometry}
% add backlinks to footnote references, cf. https://tex.stackexchange.com/questions/302266/make-footnote-clickable-both-ways
\usepackage{footnotebackref}
\setlength{\emergencystretch}{3em} % prevent overfull lines
\providecommand{\tightlist}{%
  \setlength{\itemsep}{0pt}\setlength{\parskip}{0pt}}
\setcounter{secnumdepth}{-\maxdimen} % remove section numbering

% Make use of float-package and set default placement for figures to H.
% The option H means 'PUT IT HERE' (as  opposed to the standard h option which means 'You may put it here if you like').
\usepackage{float}
\floatplacement{figure}{H}

\ifluatex
  \usepackage{selnolig}  % disable illegal ligatures
\fi

\title{代码模板}
\author{Tieway59}
\date{2017-02-20}



%%
%% added
%%

%
% language specification
%
% If no language is specified, use English as the default main document language.
%

\ifnum 0\ifxetex 1\fi\ifluatex 1\fi=0 % if pdftex
  \usepackage[shorthands=off,main=english]{babel}
\else
    % Workaround for bug in Polyglossia that breaks `\familydefault` when `\setmainlanguage` is used.
  % See https://github.com/Wandmalfarbe/pandoc-latex-template/issues/8
  % See https://github.com/reutenauer/polyglossia/issues/186
  % See https://github.com/reutenauer/polyglossia/issues/127
  \renewcommand*\familydefault{\sfdefault}
    % load polyglossia as late as possible as it *could* call bidi if RTL lang (e.g. Hebrew or Arabic)
  \usepackage{polyglossia}
  \setmainlanguage[]{english}
\fi



%
% for the background color of the title page
%
\usepackage{pagecolor}
\usepackage{afterpage}
\usepackage[margin=2.5cm,includehead=true,includefoot=true,centering]{geometry}

%
% break urls
%
\PassOptionsToPackage{hyphens}{url}

%
% When using babel or polyglossia with biblatex, loading csquotes is recommended
% to ensure that quoted texts are typeset according to the rules of your main language.
%
\usepackage{csquotes}

%
% captions
%
\definecolor{caption-color}{HTML}{777777}
\usepackage[font={stretch=1.2}, textfont={color=caption-color}, position=top, skip=4mm, labelfont=bf, singlelinecheck=false, justification=raggedright]{caption}
\setcapindent{0em}

%
% blockquote
%
\definecolor{blockquote-border}{RGB}{221,221,221}
\definecolor{blockquote-text}{RGB}{119,119,119}
\usepackage{mdframed}
\newmdenv[rightline=false,bottomline=false,topline=false,linewidth=3pt,linecolor=blockquote-border,skipabove=\parskip]{customblockquote}
\renewenvironment{quote}{\begin{customblockquote}\list{}{\rightmargin=0em\leftmargin=0em}%
\item\relax\color{blockquote-text}\ignorespaces}{\unskip\unskip\endlist\end{customblockquote}}

%
% Source Sans Pro as the de­fault font fam­ily
% Source Code Pro for monospace text
%
% 'default' option sets the default
% font family to Source Sans Pro, not \sfdefault.
%
\ifnum 0\ifxetex 1\fi\ifluatex 1\fi=0 % if pdftex
    \usepackage[default]{sourcesanspro}
  \usepackage{sourcecodepro}
  \else % if not pdftex
    \usepackage[default]{sourcesanspro}
  \usepackage{sourcecodepro}

  % XeLaTeX specific adjustments for straight quotes: https://tex.stackexchange.com/a/354887
  % This issue is already fixed (see https://github.com/silkeh/latex-sourcecodepro/pull/5) but the
  % fix is still unreleased.
  % TODO: Remove this workaround when the new version of sourcecodepro is released on CTAN.
  \ifxetex
    \makeatletter
    \defaultfontfeatures[\ttfamily]
      { Numbers   = \sourcecodepro@figurestyle,
        Scale     = \SourceCodePro@scale,
        Extension = .otf }
    \setmonofont
      [ UprightFont    = *-\sourcecodepro@regstyle,
        ItalicFont     = *-\sourcecodepro@regstyle It,
        BoldFont       = *-\sourcecodepro@boldstyle,
        BoldItalicFont = *-\sourcecodepro@boldstyle It ]
      {SourceCodePro}
    \makeatother
  \fi
  \fi

%
% heading color
%
\definecolor{heading-color}{RGB}{40,40,40}
\addtokomafont{section}{\color{heading-color}}
% When using the classes report, scrreprt, book,
% scrbook or memoir, uncomment the following line.
%\addtokomafont{chapter}{\color{heading-color}}

%
% variables for title, author and date
%
\usepackage{titling}
\title{代码模板}
\author{Tieway59}
\date{2017-02-20}

%
% tables
%

%
% remove paragraph indention
%
\setlength{\parindent}{0pt}
\setlength{\parskip}{6pt plus 2pt minus 1pt}
\setlength{\emergencystretch}{3em}  % prevent overfull lines

%
%
% Listings
%
%


%
% header and footer
%
\usepackage{fancyhdr}

\fancypagestyle{eisvogel-header-footer}{
  \fancyhead{}
  \fancyfoot{}
  \lhead[2017-02-20]{代码模板}
  \chead[]{}
  \rhead[代码模板]{2017-02-20}
  \lfoot[\thepage]{Tieway59}
  \cfoot[]{}
  \rfoot[Tieway59]{\thepage}
  \renewcommand{\headrulewidth}{0.4pt}
  \renewcommand{\footrulewidth}{0.4pt}
}
\pagestyle{eisvogel-header-footer}

%%
%% end added
%%

\begin{document}

%%
%% begin titlepage
%%
\begin{titlepage}
\newgeometry{left=6cm}
\definecolor{titlepage-color}{HTML}{FFFFFF}
\newpagecolor{titlepage-color}\afterpage{\restorepagecolor}
\newcommand{\colorRule}[3][black]{\textcolor[HTML]{#1}{\rule{#2}{#3}}}
\begin{flushleft}
\noindent
\\[-1em]
\color[HTML]{5F5F5F}
\makebox[0pt][l]{\colorRule[435488]{1.3\textwidth}{0pt}}
\par
\noindent

{
  \setstretch{1.4}
  \vfill
  \noindent {\huge \textbf{\textsf{代码模板}}}
    \vskip 2em
  \noindent {\Large \textsf{Tieway59}}
  \vfill
}


\textsf{2017-02-20}
\end{flushleft}
\end{titlepage}
\restoregeometry

%%
%% end titlepage
%%



{
\setcounter{tocdepth}{}
\tableofcontents
\newpage
}
<section id="zjnu---2268-01-分数规划" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> <a href="http://10.7.88.76/CLanguage/showproblem?problem_id=2268">ZJNU - 2268</a> 0/1 分数规划</h1>
<section id="题意" data-number="1.1">
<h2 data-number="1.1"><span class="header-section-number">1.1</span> 题意</h2>
<figure>
<img src="./img/avt.jpg" alt="" /><figcaption>图片测试</figcaption>
</figure>
<p>给<span class="math inline"><em>n</em></span>个对象的<span class="math inline"><em>w</em><sub><em>i</em></sub></span>值和<span class="math inline"><em>t</em><sub><em>i</em></sub></span>值，和重量下界<span class="math inline"><em>W</em></span> ，取其中任意个对象，求：</p>
<p><br /><span class="math display">$$
Max(\frac{\sum t_k \times 1000}{\sum w_k})(\sum w_k&gt;W,k\in\{1\dots N \})
$$</span><br /></p>
</section>
<section id="思路" data-number="1.2">
<h2 data-number="1.2"><span class="header-section-number">1.2</span> 思路</h2>
<p><a href="https://blog.csdn.net/niiick/article/details/80925267">0/1 分数规划 预备知识</a></p>
<p>1 把题目公式化以后，我们可以做以下变形：</p>
<p><br /><span class="math display">$$
V=Max(\frac{\sum t_k \times 1000}{\sum w_k})
$$</span><br /></p>
<p><br /><span class="math display">$$
V_{Max}=\frac{\sum t_k \times 1000}{\sum w_k}
$$</span><br /></p>
<p><br /><span class="math display"><em>V</em><sub><em>M</em><em>a</em><em>x</em></sub> × ∑<em>w</em><sub><em>k</em></sub> = ∑<em>t</em><sub><em>k</em></sub> × 1000</span><br /></p>
<p><br /><span class="math display">∑<em>t</em><sub><em>k</em></sub> × 1000 − <em>V</em><sub><em>M</em><em>a</em><em>x</em></sub> × ∑<em>w</em><sub><em>k</em></sub> = 0</span><br /></p>
<p>本题的目标是求<span class="math inline"><em>V</em><sub><em>M</em><em>a</em><em>x</em></sub></span> 。假如有一个可能的答案<span class="math inline"><em>V</em><sub><em>t</em></sub></span> ，</p>
<p><br /><span class="math display">∑<em>t</em><sub><em>k</em></sub> × 1000 − <em>V</em><sub><em>t</em></sub> × ∑<em>w</em><sub><em>k</em></sub> = <em>Δ</em><em>x</em></span><br /></p>
<p>先不提如何选出对象，假如最后<span class="math inline"><em>Δ</em><em>x</em> ≥ 0</span> 说明此解可行，或存在更优解；反之，此解不可行。我们可以通过二分的方法来实现这一过程。</p>
<p>对于选择的过程，可以通过背包来检验答案。设<span class="math inline"><em>d</em><em>p</em>[<em>i</em>]</span>表示重量为<span class="math inline"><em>i</em></span>的对象组合，所具有的<span class="math inline"><em>Δ</em><em>x</em></span> 的最大值。但这里我们<strong><em>只需要</em></strong> 知道有没有一种可能，使得当前的解可行，所以计算最大值即可。</p>
<p>注意：<span class="math inline"><em>Δ</em><em>x</em></span>可能有负值，所以初始化要是<span class="math inline"> − ∞</span>。</p>
<p><br /><span class="math display"><em>d</em><em>p</em>[<em>k</em>] = <em>M</em><em>a</em><em>x</em>(<em>d</em><em>p</em>[<em>j</em>] + <em>t</em>[<em>i</em>] × 1000 + <em>V</em><sub><em>t</em></sub> × <em>w</em>[<em>i</em>], <em>d</em><em>p</em>[<em>k</em>]), (<em>j</em> ∈ {<em>W</em>…0})</span><br /></p>
<p>注意到重量的数据范围有 1000000，但是在这个问题中，限制我们的只有<span class="math inline"><em>W</em></span>（范围只到 1000）。</p>
<p>对于小于<span class="math inline"><em>W</em></span> 的组合，我们需要通过动态规划递推出一些组合，直到它们的重量超过<span class="math inline"><em>W</em></span> ；对于超过<span class="math inline"><em>W</em></span> 的那些组合，都放在<span class="math inline"><em>d</em><em>p</em>[<em>W</em>]</span> 更新也可以，因为我们我们只是在找能不能用当前<span class="math inline"><em>V</em><sub><em>t</em></sub></span> 得到非负的<span class="math inline"><em>Δ</em><em>x</em></span> 。</p>
<p>综上，<strong><em>写一个二分，在 check 函数里背包一下就可以了。（一句话题解）</em></strong></p>
<blockquote>
<p>比如，<span class="math inline"><em>V</em><sub><em>t</em></sub> × <em>w</em><sub><em>i</em></sub></span> 的乘法可能会爆 int 之类的。</p>
</blockquote>
<p>复杂度：<span class="math inline"><em>N</em><em>W</em>log<sub>2</sub>(<em>K</em>)​</span></p>
</section>
<section id="代码" data-number="1.3">
<h2 data-number="1.3"><span class="header-section-number">1.3</span> 代码</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb1-1"><a href="#cb1-1"></a><span class="co">// 看看中文注释的情况</span></span>
<span id="cb1-2"><a href="#cb1-2"></a><span class="pp">#include </span><span class="im">&lt;iostream&gt;</span></span>
<span id="cb1-3"><a href="#cb1-3"></a><span class="pp">#include </span><span class="im">&lt;algorithm&gt;</span></span>
<span id="cb1-4"><a href="#cb1-4"></a><span class="kw">using</span> <span class="kw">namespace</span> std;</span>
<span id="cb1-5"><a href="#cb1-5"></a><span class="kw">typedef</span> <span class="dt">long</span> <span class="dt">long</span> ll;</span>
<span id="cb1-6"><a href="#cb1-6"></a><span class="at">const</span> <span class="dt">int</span> MAXN = <span class="dv">257</span>;</span>
<span id="cb1-7"><a href="#cb1-7"></a><span class="at">const</span> ll INF = <span class="bn">0x3f3f3f3f</span>;</span>
<span id="cb1-8"><a href="#cb1-8"></a><span class="dt">int</span> n,W;</span>
<span id="cb1-9"><a href="#cb1-9"></a><span class="dt">int</span> ans;</span>
<span id="cb1-10"><a href="#cb1-10"></a><span class="dt">int</span> w[MAXN],t[MAXN];</span>
<span id="cb1-11"><a href="#cb1-11"></a>ll dp[<span class="dv">1007</span>];</span>
<span id="cb1-12"><a href="#cb1-12"></a></span>
<span id="cb1-13"><a href="#cb1-13"></a><span class="dt">bool</span> check(ll v){</span>
<span id="cb1-14"><a href="#cb1-14"></a>    dp[<span class="dv">0</span>]=<span class="dv">0</span>;</span>
<span id="cb1-15"><a href="#cb1-15"></a>    <span class="cf">for</span>(<span class="dt">int</span> i=<span class="dv">1</span>;i&lt;=W;i++)</span>
<span id="cb1-16"><a href="#cb1-16"></a>        dp[i]=-INF;</span>
<span id="cb1-17"><a href="#cb1-17"></a>    <span class="cf">for</span>(<span class="dt">int</span> i=<span class="dv">1</span>;i&lt;=n;i++)</span>
<span id="cb1-18"><a href="#cb1-18"></a>        <span class="cf">for</span>(<span class="dt">int</span> k,j=W;j&gt;=<span class="dv">0</span>;j--)</span>
<span id="cb1-19"><a href="#cb1-19"></a>            k=min(j+w[i],W),</span>
<span id="cb1-20"><a href="#cb1-20"></a>            dp[k]=max(dp[j]+t[i]-v*w[i],dp[k]);</span>
<span id="cb1-21"><a href="#cb1-21"></a>    <span class="cf">if</span>(dp[W]&gt;=<span class="dv">0</span>)<span class="cf">return</span> <span class="kw">true</span>;</span>
<span id="cb1-22"><a href="#cb1-22"></a>    <span class="cf">return</span> <span class="kw">false</span>;</span>
<span id="cb1-23"><a href="#cb1-23"></a>}</span>
<span id="cb1-24"><a href="#cb1-24"></a><span class="dt">int</span> main(){</span>
<span id="cb1-25"><a href="#cb1-25"></a>    ios::sync_with_stdio(<span class="dv">0</span>);</span>
<span id="cb1-26"><a href="#cb1-26"></a>    cout.tie(<span class="dv">0</span>);cin.tie(<span class="dv">0</span>);</span>
<span id="cb1-27"><a href="#cb1-27"></a>    cin&gt;&gt;n&gt;&gt;W;</span>
<span id="cb1-28"><a href="#cb1-28"></a>    <span class="cf">for</span>(<span class="dt">int</span> i=<span class="dv">1</span>;i&lt;=n;i++){</span>
<span id="cb1-29"><a href="#cb1-29"></a>        cin&gt;&gt;w[i]&gt;&gt;t[i];</span>
<span id="cb1-30"><a href="#cb1-30"></a>        t[i]*=<span class="dv">1000</span>;</span>
<span id="cb1-31"><a href="#cb1-31"></a>    }</span>
<span id="cb1-32"><a href="#cb1-32"></a>    ll mid,l=<span class="dv">0</span>,r=<span class="dv">250005</span>;</span>
<span id="cb1-33"><a href="#cb1-33"></a>    <span class="cf">while</span>(l&lt;r){</span>
<span id="cb1-34"><a href="#cb1-34"></a>        mid=(l+r+<span class="dv">1</span>)&gt;&gt;<span class="dv">1</span>;</span>
<span id="cb1-35"><a href="#cb1-35"></a>        <span class="cf">if</span>(check(mid)){</span>
<span id="cb1-36"><a href="#cb1-36"></a>            l=mid;</span>
<span id="cb1-37"><a href="#cb1-37"></a>        }<span class="cf">else</span>{</span>
<span id="cb1-38"><a href="#cb1-38"></a>            r=mid-<span class="dv">1</span>;</span>
<span id="cb1-39"><a href="#cb1-39"></a>        }</span>
<span id="cb1-40"><a href="#cb1-40"></a>    }</span>
<span id="cb1-41"><a href="#cb1-41"></a>    cout&lt;&lt;l&lt;&lt;endl;</span>
<span id="cb1-42"><a href="#cb1-42"></a>    <span class="cf">return</span> <span class="dv">0</span>;</span>
<span id="cb1-43"><a href="#cb1-43"></a>}</span></code></pre></div>
<div class="sourceCode" id="cb2"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb2-1"><a href="#cb2-1"></a></span>
<span id="cb2-2"><a href="#cb2-2"></a><span class="co">/* Author: bnfcc -&gt; tc2000731 -&gt; tieway59</span></span>
<span id="cb2-3"><a href="#cb2-3"></a><span class="co"> * Description:</span></span>
<span id="cb2-4"><a href="#cb2-4"></a><span class="co"> *      维护下凸包，对于每个x维护f(x)=k*x+b的最大值。</span></span>
<span id="cb2-5"><a href="#cb2-5"></a><span class="co"> *      query max value within all f(x) functions.</span></span>
<span id="cb2-6"><a href="#cb2-6"></a><span class="co"> *      c++11 features included.</span></span>
<span id="cb2-7"><a href="#cb2-7"></a><span class="co"> * Problems:</span></span>
<span id="cb2-8"><a href="#cb2-8"></a><span class="co"> *      https://nanti.jisuanke.com/t/41306</span></span>
<span id="cb2-9"><a href="#cb2-9"></a><span class="co"> *      https://nanti.jisuanke.com/t/41097</span></span>
<span id="cb2-10"><a href="#cb2-10"></a><span class="co"> */</span></span>
<span id="cb2-11"><a href="#cb2-11"></a><span class="kw">template</span>&lt;<span class="kw">typename</span> var=<span class="dt">long</span> <span class="dt">long</span>, <span class="at">const</span> <span class="dt">int</span> SIZE = <span class="dv">1000005</span>, <span class="kw">typename</span> ldb=<span class="dt">long</span> <span class="dt">double</span>&gt;</span>
<span id="cb2-12"><a href="#cb2-12"></a><span class="kw">struct</span> Hull {</span>
<span id="cb2-13"><a href="#cb2-13"></a>    <span class="kw">struct</span> fx {</span>
<span id="cb2-14"><a href="#cb2-14"></a>        var k, b;</span>
<span id="cb2-15"><a href="#cb2-15"></a></span>
<span id="cb2-16"><a href="#cb2-16"></a>        fx() {}</span>
<span id="cb2-17"><a href="#cb2-17"></a></span>
<span id="cb2-18"><a href="#cb2-18"></a>        fx(var k, var b) : k(k), b(b) {}</span>
<span id="cb2-19"><a href="#cb2-19"></a></span>
<span id="cb2-20"><a href="#cb2-20"></a>        var f(var x) { <span class="cf">return</span> k * x + b; }</span>
<span id="cb2-21"><a href="#cb2-21"></a>    };</span>
<span id="cb2-22"><a href="#cb2-22"></a></span>
<span id="cb2-23"><a href="#cb2-23"></a>    <span class="dt">int</span> cnt;</span>
<span id="cb2-24"><a href="#cb2-24"></a>    fx arr[SIZE];</span>
<span id="cb2-25"><a href="#cb2-25"></a></span>
<span id="cb2-26"><a href="#cb2-26"></a>    <span class="dt">bool</span> empty() {</span>
<span id="cb2-27"><a href="#cb2-27"></a>        <span class="cf">return</span> cnt == <span class="dv">0</span>;</span>
<span id="cb2-28"><a href="#cb2-28"></a>    }</span>
<span id="cb2-29"><a href="#cb2-29"></a></span>
<span id="cb2-30"><a href="#cb2-30"></a>    <span class="dt">void</span> init() {</span>
<span id="cb2-31"><a href="#cb2-31"></a>        cnt = <span class="dv">0</span>;</span>
<span id="cb2-32"><a href="#cb2-32"></a>    }</span>
<span id="cb2-33"><a href="#cb2-33"></a></span>
<span id="cb2-34"><a href="#cb2-34"></a>    <span class="dt">void</span> add(<span class="at">const</span> fx &amp;p) {</span>
<span id="cb2-35"><a href="#cb2-35"></a>        arr[cnt++] = p;</span>
<span id="cb2-36"><a href="#cb2-36"></a>    }</span>
<span id="cb2-37"><a href="#cb2-37"></a></span>
<span id="cb2-38"><a href="#cb2-38"></a>    <span class="dt">void</span> pop() {</span>
<span id="cb2-39"><a href="#cb2-39"></a>        cnt--;</span>
<span id="cb2-40"><a href="#cb2-40"></a>    }</span>
<span id="cb2-41"><a href="#cb2-41"></a></span>
<span id="cb2-42"><a href="#cb2-42"></a>    <span class="dt">bool</span> chek(<span class="at">const</span> fx &amp;a, <span class="at">const</span> fx &amp;b, <span class="at">const</span> fx &amp;c) {</span>
<span id="cb2-43"><a href="#cb2-43"></a>        ldb ab, ak, bb, bk, cb, ck;</span>
<span id="cb2-44"><a href="#cb2-44"></a>        tie(ab, ak, bb, bk, cb, ck) =</span>
<span id="cb2-45"><a href="#cb2-45"></a>                tie(a.b, a.k, b.b, b.k, c.b, c.k);</span>
<span id="cb2-46"><a href="#cb2-46"></a>        <span class="cf">return</span> (ab - bb) / (bk - ak) &gt; (ab - cb) / (ck - ak);</span>
<span id="cb2-47"><a href="#cb2-47"></a>    }</span>
<span id="cb2-48"><a href="#cb2-48"></a></span>
<span id="cb2-49"><a href="#cb2-49"></a>    <span class="dt">void</span> insert(<span class="at">const</span> fx &amp;p) {<span class="co">///k从小到大插入</span></span>
<span id="cb2-50"><a href="#cb2-50"></a>        <span class="cf">if</span> (cnt &amp;&amp; arr[cnt - <span class="dv">1</span>].k == p.k) {</span>
<span id="cb2-51"><a href="#cb2-51"></a>            <span class="cf">if</span> (p.b &lt;= arr[cnt - <span class="dv">1</span>].b)<span class="cf">return</span>;</span>
<span id="cb2-52"><a href="#cb2-52"></a>            <span class="cf">else</span> pop();</span>
<span id="cb2-53"><a href="#cb2-53"></a>        }</span>
<span id="cb2-54"><a href="#cb2-54"></a>        <span class="cf">while</span> (cnt &gt;= <span class="dv">2</span> &amp;&amp; chek(arr[cnt - <span class="dv">2</span>], arr[cnt - <span class="dv">1</span>], p))pop();</span>
<span id="cb2-55"><a href="#cb2-55"></a>        add(p);</span>
<span id="cb2-56"><a href="#cb2-56"></a>    }</span>
<span id="cb2-57"><a href="#cb2-57"></a></span>
<span id="cb2-58"><a href="#cb2-58"></a>    <span class="co">/*var query(var x) {///x从大到小查询       从小到大用队列</span></span>
<span id="cb2-59"><a href="#cb2-59"></a><span class="co">        while (cnt &gt; 1 &amp;&amp; arr[cnt - 2].f(x) &gt; arr[cnt - 1].f(x))pop();;</span></span>
<span id="cb2-60"><a href="#cb2-60"></a><span class="co">        return arr[cnt - 1].f(x);</span></span>
<span id="cb2-61"><a href="#cb2-61"></a><span class="co">    }*/</span></span>
<span id="cb2-62"><a href="#cb2-62"></a></span>
<span id="cb2-63"><a href="#cb2-63"></a>    var query(var x) {<span class="co">///二分查询，x顺序任意</span></span>
<span id="cb2-64"><a href="#cb2-64"></a>        <span class="dt">int</span> l = <span class="dv">0</span>, r = cnt - <span class="dv">1</span>;</span>
<span id="cb2-65"><a href="#cb2-65"></a>        <span class="cf">while</span> (l &lt; r) {</span>
<span id="cb2-66"><a href="#cb2-66"></a>            <span class="dt">int</span> mid = (l + r) &gt;&gt; <span class="dv">1</span>;</span>
<span id="cb2-67"><a href="#cb2-67"></a>            <span class="cf">if</span> (arr[mid].f(x) &gt;= arr[mid + <span class="dv">1</span>].f(x))r = mid;</span>
<span id="cb2-68"><a href="#cb2-68"></a>            <span class="cf">else</span> l = mid + <span class="dv">1</span>;</span>
<span id="cb2-69"><a href="#cb2-69"></a>        }</span>
<span id="cb2-70"><a href="#cb2-70"></a>        <span class="cf">return</span> arr[l].f(x);</span>
<span id="cb2-71"><a href="#cb2-71"></a>    }</span>
<span id="cb2-72"><a href="#cb2-72"></a>};</span>
<span id="cb2-73"><a href="#cb2-73"></a></span>
<span id="cb2-74"><a href="#cb2-74"></a><span class="co">// vector stack</span></span>
<span id="cb2-75"><a href="#cb2-75"></a><span class="kw">template</span>&lt;<span class="kw">typename</span> var=<span class="dt">long</span> <span class="dt">long</span>, <span class="at">const</span> <span class="dt">int</span> SIZE = <span class="dv">1000005</span>, <span class="kw">typename</span> ldb=<span class="dt">long</span> <span class="dt">double</span>&gt;</span>
<span id="cb2-76"><a href="#cb2-76"></a><span class="kw">struct</span> Hull {</span>
<span id="cb2-77"><a href="#cb2-77"></a>    <span class="kw">struct</span> Line {</span>
<span id="cb2-78"><a href="#cb2-78"></a>        var k, b;</span>
<span id="cb2-79"><a href="#cb2-79"></a></span>
<span id="cb2-80"><a href="#cb2-80"></a>        Line() {}</span>
<span id="cb2-81"><a href="#cb2-81"></a></span>
<span id="cb2-82"><a href="#cb2-82"></a>        Line(var k, var b) : k(k), b(b) {}</span>
<span id="cb2-83"><a href="#cb2-83"></a></span>
<span id="cb2-84"><a href="#cb2-84"></a>        var f(var x) { <span class="cf">return</span> k * x + b; }</span>
<span id="cb2-85"><a href="#cb2-85"></a>    };</span>
<span id="cb2-86"><a href="#cb2-86"></a></span>
<span id="cb2-87"><a href="#cb2-87"></a>    <span class="dt">int</span> cnt;</span>
<span id="cb2-88"><a href="#cb2-88"></a>    vector &lt;Line&gt; con;<span class="co">//</span></span>
<span id="cb2-89"><a href="#cb2-89"></a></span>
<span id="cb2-90"><a href="#cb2-90"></a>    <span class="dt">bool</span> empty() {</span>
<span id="cb2-91"><a href="#cb2-91"></a>        <span class="cf">return</span> cnt == <span class="dv">0</span>;</span>
<span id="cb2-92"><a href="#cb2-92"></a>    }</span>
<span id="cb2-93"><a href="#cb2-93"></a></span>
<span id="cb2-94"><a href="#cb2-94"></a>    <span class="dt">void</span> init(<span class="at">const</span> <span class="dt">int</span> &amp;n) {</span>
<span id="cb2-95"><a href="#cb2-95"></a>        con.clear();</span>
<span id="cb2-96"><a href="#cb2-96"></a>        <span class="cf">if</span> (n &gt; con.capacity())con.reserve(n);</span>
<span id="cb2-97"><a href="#cb2-97"></a>        cnt = <span class="dv">0</span>;</span>
<span id="cb2-98"><a href="#cb2-98"></a>    }</span>
<span id="cb2-99"><a href="#cb2-99"></a></span>
<span id="cb2-100"><a href="#cb2-100"></a>    <span class="dt">void</span> add(<span class="at">const</span> Line &amp;p) {</span>
<span id="cb2-101"><a href="#cb2-101"></a>        con.emplace_back(p);</span>
<span id="cb2-102"><a href="#cb2-102"></a>        cnt++;</span>
<span id="cb2-103"><a href="#cb2-103"></a>    }</span>
<span id="cb2-104"><a href="#cb2-104"></a></span>
<span id="cb2-105"><a href="#cb2-105"></a>    <span class="dt">void</span> pop() {</span>
<span id="cb2-106"><a href="#cb2-106"></a>        cnt--;</span>
<span id="cb2-107"><a href="#cb2-107"></a>        con.pop_back();</span>
<span id="cb2-108"><a href="#cb2-108"></a>    }</span>
<span id="cb2-109"><a href="#cb2-109"></a></span>
<span id="cb2-110"><a href="#cb2-110"></a>    <span class="dt">bool</span> chek(<span class="at">const</span> Line &amp;a, <span class="at">const</span> Line &amp;b, <span class="at">const</span> Line &amp;c) {</span>
<span id="cb2-111"><a href="#cb2-111"></a>        ldb ab, ak, bb, bk, cb, ck;</span>
<span id="cb2-112"><a href="#cb2-112"></a>        tie(ab, ak, bb, bk, cb, ck) =</span>
<span id="cb2-113"><a href="#cb2-113"></a>                tie(a.b, a.k, b.b, b.k, c.b, c.k);</span>
<span id="cb2-114"><a href="#cb2-114"></a>        <span class="cf">return</span> (ab - bb) / (bk - ak) &gt; (ab - cb) / (ck - ak);</span>
<span id="cb2-115"><a href="#cb2-115"></a>    }</span>
<span id="cb2-116"><a href="#cb2-116"></a></span>
<span id="cb2-117"><a href="#cb2-117"></a>    <span class="dt">void</span> insert(<span class="at">const</span> Line &amp;p) {<span class="co">///k从小到大插入</span></span>
<span id="cb2-118"><a href="#cb2-118"></a>        <span class="cf">if</span> (cnt &amp;&amp; con[cnt - <span class="dv">1</span>].k == p.k) {</span>
<span id="cb2-119"><a href="#cb2-119"></a>            <span class="cf">if</span> (p.b &lt;= con[cnt - <span class="dv">1</span>].b)<span class="cf">return</span>;</span>
<span id="cb2-120"><a href="#cb2-120"></a>            <span class="cf">else</span> pop();</span>
<span id="cb2-121"><a href="#cb2-121"></a>        }</span>
<span id="cb2-122"><a href="#cb2-122"></a>        <span class="cf">while</span> (cnt &gt;= <span class="dv">2</span> &amp;&amp; chek(con[cnt - <span class="dv">2</span>], con[cnt - <span class="dv">1</span>], p))pop();</span>
<span id="cb2-123"><a href="#cb2-123"></a>        add(p);</span>
<span id="cb2-124"><a href="#cb2-124"></a>    }</span>
<span id="cb2-125"><a href="#cb2-125"></a></span>
<span id="cb2-126"><a href="#cb2-126"></a>    var query(var x) {<span class="co">///二分查询，x顺序任意</span></span>
<span id="cb2-127"><a href="#cb2-127"></a>        <span class="dt">int</span> l = <span class="dv">0</span>, r = cnt - <span class="dv">1</span>;</span>
<span id="cb2-128"><a href="#cb2-128"></a>        <span class="cf">while</span> (l &lt; r) {</span>
<span id="cb2-129"><a href="#cb2-129"></a>            <span class="dt">int</span> mid = (l + r) &gt;&gt; <span class="dv">1</span>;</span>
<span id="cb2-130"><a href="#cb2-130"></a>            <span class="cf">if</span> (con[mid].f(x) &gt;= con[mid + <span class="dv">1</span>].f(x))r = mid;</span>
<span id="cb2-131"><a href="#cb2-131"></a>            <span class="cf">else</span> l = mid + <span class="dv">1</span>;</span>
<span id="cb2-132"><a href="#cb2-132"></a>        }</span>
<span id="cb2-133"><a href="#cb2-133"></a>        <span class="cf">return</span> con[l].f(x);</span>
<span id="cb2-134"><a href="#cb2-134"></a>    }</span>
<span id="cb2-135"><a href="#cb2-135"></a>};</span>
<span id="cb2-136"><a href="#cb2-136"></a></span>
<span id="cb2-137"><a href="#cb2-137"></a>Hull&lt;&gt; hull;</span></code></pre></div>
</section>
</section>

\end{document}
